import tkinter as tk
from PIL import ImageTk, Image, ImageOps, ImageDraw
#SOLVED

class FullScreenApp(object):
    def __init__(self, master, **kwargs):
        self.master=master
        pad=3
        self._geom='768x810'
        master.geometry("{0}x{1}+0+0".format(master.winfo_screenwidth()-pad, master.winfo_screenheight()-pad))
        master.bind('<Escape>', self.toggle_geom)


    def toggle_geom(self, event):
        geom=self.master.winfo_geometry()
        self.master.geometry(self._geom)
        self._geom=geom


    def resize(self):
        self.master.geometry("1168x810")


def sightstone(event):
    mask = Image.new('L', (10, 10), 0)
    draw = ImageDraw.Draw(mask)
    draw.ellipse((0, 0) + mask.size, fill=255)
    im = Image.open('Sightstone_item.png')
    output = ImageOps.fit(im, mask.size, centering=(0.5, 0.5))
    output.putalpha(mask)
    circle_pic = ImageTk.PhotoImage(output)
    sward = Canvas.create_image(event.x, event.y, image=circle_pic)
    n = len(wards) + 1
    string = 'sward '
    wards.update({string + '%d' % n: [(event.x, event.y)]})
    #dump.update({string + '%d' % n: [sward, img, i]})

def circle(Canvas, x, y):
    mask = Image.new('L', (10, 10), 0)
    draw = ImageDraw.Draw(mask)
    draw.ellipse((0, 0) + mask.size, fill=255)
    im = Image.open('Sightstone_item.png')
    output = ImageOps.fit(im, mask.size, centering=(0.5, 0.5))
    output.putalpha(mask)
    circle_pic = ImageTk.PhotoImage(output)
    circle1 = Canvas.create_image(x, y, image=circle_pic)
    return circle_pic, circle1

window = tk.Tk()
Canvas = tk.Canvas(window, width=768, height=810)
img = Image.open('srift.jpg')
img = img.resize((768, 810), Image.ANTIALIAS)
mapimg = ImageTk.PhotoImage(img)
Canvas.create_image(384, 405, image=mapimg)
Canvas.bind("<Control-Button-1>", sightstone)
Canvas.pack(expand='yes', fill='both')
wards, dump, string = {}, {}, ''
window.mainloop()

#print(wards)